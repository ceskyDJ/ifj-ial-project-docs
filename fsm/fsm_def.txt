#states
s
symbol
string_in
string_out
escape
escape_d
escape_dd
integer
exponent
exponent_sign
number_with_exp
decimal
number
minus
line_comm
multi_line_comm1
multi_line_comm2
multi_line_comm3
multi_line_comm4
plus
multiplication
division
int_division
greater_than
less_than
greater_equal
less_equal
equal
not_equal1
not_equal2
type_spec_s
comma_s
strlen_s
concat1
concat2
assignment
left_par
right_par

#initial
s


#accepting
symbol
string_out
integer
number_with_exp
number
minus
plus
multiplication
division
int_division
greater_than
less_than
greater_equal
less_equal
not_equal2
type_spec_s
comma_s
strlen_s
concat2
assignment
equal
left_par
right_par

#alphabet
[a-z]
[A-Z]
[0-9]
'
\"
\\
n
t
e
E
+
-
.
EOL
[
]
Σ
_
=
lt
gt
*
/
strlen
type_spec
comma
(
)
~
whitespace

#transitions
s:[a-z],[A-Z],_>symbol
symbol:[a-z],[A-Z],[0-9],_>symbol
s:\">string_in
string_in:Σ>string_in
string_in:\\>escape
escape:\",\\,n,t>string_in
string_in:\">string_out
escape:[0-9]>escape_d
escape_d:[0-9]>escape_dd
escape_dd:[0-9]>string_in
s:[0-9]>integer
integer:[0-9]>integer
integer:e, E>exponent
exponent:+,->exponent_sign
exponent_sign:[0-9]>number_with_exp
exponent:[0-9]>number_with_exp
number_with_exp:[0-9]>number_with_exp
integer:.>decimal
decimal:[0-9]>number
number:e,E>exponent
number:[0-9]>number
s:->minus
minus:->line_comm
line_comm:Σ>line_comm
line_comm:EOL>s
line_comm:[>multi_line_comm1
multi_line_comm1:[>multi_line_comm2
multi_line_comm1:Σ>line_comm
multi_line_comm2:Σ>multi_line_comm2
multi_line_comm2:]>multi_line_comm3
multi_line_comm3:Σ>multi_line_comm2
multi_line_comm3:]>s
s:+>plus
s:*>multiplication
s:strlen>strlen_s
s:/>division
division:/>int_division
s:type_spec>type_spec_s
s:comma>comma_s
s:.>concat1
concat1:.>concat2
s:=>assignment
assignment:=>equal
s:(>left_par
s:)>right_par
s:gt>greater_than
greater_than:=>greater_equal
s:lt>less_than
less_than:=>less_equal
s:~>not_equal1
not_equal1:=>not_equal2
s:whitespace>s
